com -> folder -> google -> 
					create folders inside google ->
								controller
								dao
								bean
								util


start -> page  ? 
	Signup 
	Login 
	
	SessionController -> login , signup , forgetpassword 

create 1 class with name SessionController inside controller folder 

how to open signup ->
1) create controller if not 
2) create view file -- jsp{html+java} | html 
	jsp -> view file --> browser -> we can write HTML + JAVA 
	java server pages / java servlet pages 
	
	views ->folder -> new -> jsp -> Signup.jsp 
	now create form with fields 
	
now create controller SessionController if not 
inside SessionController we create 1 method that open Signup jsp for us 

	@GetMapping("/signup")
	public String signup() {

		return "Signup";
	}		

----------------------------------------------------------------
how to create jsp file ? 
file -> new -> other -> jsp
 	
	i dont have option for jsp
		install jps plugins from eclipe market place 
			steps :	
				click on Help menu -> click eclipse market place -> click on popular->
						you can see java ee or web developer tools now click on install button 
								-> now just do next / yes / accept etc 
								-> we dont need to select any package or tools if they ask
								--> finish 
			once installation done restart your STS and check you have your jsp option 
			
			
			
----------------------------------------------------------------
			
configure below properties in application.properties 
	1) server port 
	2) views ? jsp 
	3)* database 
	
				
we need to add jsp lib for spring boot app => 
	then only we can access jsp
	
	inside pom.xml we need to add 
		dependency under the dependencies tag 
						

Task : 
	create 1 url /login 
		login url will open Login.jsp
				Login.jsp have form with 1) email 2) password and 3) Submit button 
----------------------------------------------------------------
read data from client we need to create method in controller with @Postmapping 
also create a bean with field and getters and setters. 
pass that bean in method's argument. 
----------------------------------------------------------------
1) input 
	jsp open 
	controller @Getmapping("/signup")
		return Signup 
2)	fn ln em pwd 
		submit -->
	@Postmapping("/saveuser")
	signup jsp read -> process -> response 
3)	Output [ jsp ] Login jsp 

----------------------------------------------------------------
signup data --> 
		server -->	
				1) validation
				2) DBValidation - duplicate 
				3) DbConnection
				4) InsertQuery 
				5) Response --> Login  				


----------------------------------------------------------------
DbConnection 

	
	open mysql 
	
	database create 
	
	create database ecomapp; 
	
	use ecomapp; 
	
	create table users (
		userId integer primary key auto_increment,
		firstName varchar(30),
		lastName varchar(30),
		email varchar(50),
		password varchar(80),
		role integer
	);
	
	1 -> admin 
	2 -> user/buyer 
	
	desc users;
	
-----------
spring Boot app => dbConnection 


	1) db [mysql] driver  => jar => maven  [ mysql connector ] 
	2) query execute  => jar   spring 	   [ spring jdbc ] 
	3) application.properties -> dbConnection
					1) driver 
					2) url 
					3) userName
					4) password 
	spring -> edit starter ->  Mysql Driver , Jdbc Api , Spring Data Jdbc 
	
	
	
-----------
	insert into users (firstName,lastName,email,password,role) 
	values ('ram','sita','ram@sita.com','ravan');




	
	


							
			
			
			
	
	
	
	
	
	
	
	
	
	
	